"""
Django settings for tickManage project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
"""
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 't*ym_#2n!b#jo^=*n8*bo&xxv6yltjaty_xdmb65waav-p!*3$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tickManage.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tickManage.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
"""

import warnings
from django.conf import settings
from django.core.exceptions import ImproperlyConfigured

DEFAULT_USER_SETTINGS = {
    'login_view_ticketlist': True,
    'email_on_ticket_change': True,
    'email_on_ticket_assign': True,
    'tickets_per_page': 25,
    'use_email_as_submitter': True,
}

try:
    DEFAULT_USER_SETTINGS.update(settings.TICKMANAGE_DEFAULT_SETTINGS)
except AttributeError:
    pass


HAS_TAG_SUPPORT = False

##########################################
# generic options - visible on all pages #
##########################################

# redirect to login page instead of the default homepage when users visits "/"?
TICKMANAGE_REDIRECT_TO_LOGIN_BY_DEFAULT = getattr(settings,
                                                'TICKMANAGE_REDIRECT_TO_LOGIN_BY_DEFAULT',
                                                False)

# raises a 404 to anon users. It's like it was invisible
TICKMANAGE_ANON_ACCESS_RAISES_404 = getattr(settings,
                                          'TICKMANAGE_ANON_ACCESS_RAISES_404',
                                          False)

# show knowledgebase links?
TICKMANAGE_KB_ENABLED = getattr(settings, 'TICKMANAGE_KB_ENABLED', True)

# show extended navigation by default, to all users, irrespective of staff status?
TICKMANAGE_NAVIGATION_ENABLED = getattr(settings, 'TICKMANAGE_NAVIGATION_ENABLED', False)

# use public CDNs to serve jquery and other javascript by default?
# otherwise, use built-in static copy
TICKMANAGE_USE_CDN = getattr(settings, 'TICKMANAGE_USE_CDN', False)

# show dropdown list of languages that ticket comments can be translated into?
TICKMANAGE_TRANSLATE_TICKET_COMMENTS = getattr(settings,
                                             'TICKMANAGE_TRANSLATE_TICKET_COMMENTS',
                                             False)

# list of languages to offer. if set to false,
# all default google translate languages will be shown.
TICKMANAGE_TRANSLATE_TICKET_COMMENTS_LANG = getattr(settings,
                                                  'TICKMANAGE_TRANSLATE_TICKET_COMMENTS_LANG',
                                                  ["en", "de", "es", "fr", "it", "ru"])

# show link to 'change password' on 'User Settings' page?
TICKMANAGE_SHOW_CHANGE_PASSWORD = getattr(settings, 'TICKMANAGE_SHOW_CHANGE_PASSWORD', False)

# allow user to override default layout for 'followups' - work in progress.
TICKMANAGE_FOLLOWUP_MOD = getattr(settings, 'TICKMANAGE_FOLLOWUP_MOD', False)

# auto-subscribe user to ticket if (s)he responds to a ticket?
TICKMANAGE_AUTO_SUBSCRIBE_ON_TICKET_RESPONSE = getattr(settings,
                                                     'TICKMANAGE_AUTO_SUBSCRIBE_ON_TICKET_RESPONSE',
                                                     False)


############################
# options for public pages #
############################

# show 'view a ticket' section on public page?
TICKMANAGE_VIEW_A_TICKET_PUBLIC = getattr(settings, 'TICKMANAGE_VIEW_A_TICKET_PUBLIC', True)

# show 'submit a ticket' section on public page?
TICKMANAGE_SUBMIT_A_TICKET_PUBLIC = getattr(settings, 'TICKMANAGE_SUBMIT_A_TICKET_PUBLIC', True)


###################################
# options for update_ticket views #
###################################

''' options for update_ticket views '''
# allow non-staff users to interact with tickets?
# can be True/False or a callable accepting the active user and returning True if they must be considered tickManage staff
TICKMANAGE_ALLOW_NON_STAFF_TICKET_UPDATE = getattr(settings, 'TICKMANAGE_ALLOW_NON_STAFF_TICKET_UPDATE', False)
if not (TICKMANAGE_ALLOW_NON_STAFF_TICKET_UPDATE in (True, False) or callable(TICKMANAGE_ALLOW_NON_STAFF_TICKET_UPDATE)):
    warnings.warn("TICKMANAGE_ALLOW_NON_STAFF_TICKET_UPDATE should be set to either True/False or a callable.", RuntimeWarning)

# show edit buttons in ticket follow ups.
TICKMANAGE_SHOW_EDIT_BUTTON_FOLLOW_UP = getattr(settings,
                                              'TICKMANAGE_SHOW_EDIT_BUTTON_FOLLOW_UP',
                                              True)

# show delete buttons in ticket follow ups if user is 'superuser'
TICKMANAGE_SHOW_DELETE_BUTTON_SUPERUSER_FOLLOW_UP = getattr(
    settings, 'TICKMANAGE_SHOW_DELETE_BUTTON_SUPERUSER_FOLLOW_UP', False)

# make all updates public by default? this will hide the 'is this update public' checkbox
TICKMANAGE_UPDATE_PUBLIC_DEFAULT = getattr(settings, 'TICKMANAGE_UPDATE_PUBLIC_DEFAULT', False)

# only show staff users in ticket owner drop-downs
TICKMANAGE_STAFF_ONLY_TICKET_OWNERS = getattr(settings, 'TICKMANAGE_STAFF_ONLY_TICKET_OWNERS', False)

# only show staff users in ticket cc drop-down
TICKMANAGE_STAFF_ONLY_TICKET_CC = getattr(settings, 'TICKMANAGE_STAFF_ONLY_TICKET_CC', False)

# allow the subject to have a configurable template.
TICKMANAGE_EMAIL_SUBJECT_TEMPLATE = getattr(
    settings, 'TICKMANAGE_EMAIL_SUBJECT_TEMPLATE',
    "{{ ticket.ticket }} {{ ticket.title|safe }} %(subject)s")
# since django-tickManage may not work correctly without the ticket ID
# in the subject, let's do a check for it quick:
if TICKMANAGE_EMAIL_SUBJECT_TEMPLATE.find("ticket.ticket") < 0:
    raise ImproperlyConfigured

# default fallback locale when queue locale not found
TICKMANAGE_EMAIL_FALLBACK_LOCALE = getattr(settings, 'TICKMANAGE_EMAIL_FALLBACK_LOCALE', 'en')

# default maximum email attachment size, in bytes
# only attachments smaller than this size will be sent via email
TICKMANAGE_MAX_EMAIL_ATTACHMENT_SIZE = getattr(settings, 'TICKMANAGE_MAX_EMAIL_ATTACHMENT_SIZE', 512000)


########################################
# options for staff.create_ticket view #
########################################

# hide the 'assigned to' / 'Case owner' field from the 'create_ticket' view?
TICKMANAGE_CREATE_TICKET_HIDE_ASSIGNED_TO = getattr(
    settings, 'TICKMANAGE_CREATE_TICKET_HIDE_ASSIGNED_TO', False)


#################
# email options #
#################

# default Queue email submission settings
QUEUE_EMAIL_BOX_TYPE = getattr(settings, 'QUEUE_EMAIL_BOX_TYPE', None)
QUEUE_EMAIL_BOX_SSL = getattr(settings, 'QUEUE_EMAIL_BOX_SSL', None)
QUEUE_EMAIL_BOX_HOST = getattr(settings, 'QUEUE_EMAIL_BOX_HOST', None)
QUEUE_EMAIL_BOX_USER = getattr(settings, 'QUEUE_EMAIL_BOX_USER', None)
QUEUE_EMAIL_BOX_PASSWORD = getattr(settings, 'QUEUE_EMAIL_BOX_PASSWORD', None)

# only process emails with a valid tracking ID? (throws away all other mail)
QUEUE_EMAIL_BOX_UPDATE_ONLY = getattr(settings, 'QUEUE_EMAIL_BOX_UPDATE_ONLY', False)

# only allow users to access queues that they are members of?
TICKMANAGE_ENABLE_PER_QUEUE_STAFF_PERMISSION = getattr(
    settings, 'TICKMANAGE_ENABLE_PER_QUEUE_STAFF_PERMISSION', False)

# use https in the email links
TICKMANAGE_USE_HTTPS_IN_EMAIL_LINK = getattr(settings, 'TICKMANAGE_USE_HTTPS_IN_EMAIL_LINK', False)
